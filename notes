1.urlopen()返回的对象，可以使用read()进行读取，同样也可以使用geturl()方法、info()方法、getcode()方法。

二：re用法
1.re的方法
    编译：re.compile()接受可选的标志参数。
为了在匹配时不区分大小写，在编译规则时加上re.I，例如：
csvt_re = re.compile(r'csvt',re.I)
    match()通常用来是否匹配成功。实际程序中，最常见的做法是将‘‘MatchObject’’保存在一个实际变量中，然后检查它是否为None。
    macth()匹配，只有当要匹配的字符串在开头的位置，才会被匹配出来，当匹配到后，会返回一个字符串对象，例如：
>>>x = s_re.match('\\\rcsvt')
>>>x
<_sre.SRE_Match object; span=(0, 6), match='\\\rcsvt'>
用x.group()来将字符串对象转换成具体匹配到的字符串。
如果没有匹配到，则什么也不返回。
    search()跟match()区别在于，search()不管匹配字符串的位置是否在开头，都能匹配到。
    findall()匹配所有字符串并返回列表。
    finditer()匹配所有，但是返回的是迭代器，用next()方式查看。
    re.sub()用于字符串替换。例如：
    rs = r'c..t'
    re,sub(rs,'python','csst hello')
       python hello
    re.split('.'，s)用于定义以'.'的方式切割字符串s。
2.re的属性
    正则中'.'可以匹配任何一个字符。
    在定义正则表达式时，加上re.S就可以让正则表达式中的'.'匹配'\n'。例如：
    rs = r'a.b'
    re.findall(rs,'a\nb',re.S)
    re.M 用来实现多行匹配，处理多行的一个字符串，用在处理文本文件，分多行写的字符串。
    re.X用在当我们写的正则表达式有多行时。
    email = r'\w{3}@\w+(\.com|\.cn)' 其中的小括号用来分组。当有分组时，会优先返回分组当中的数据。
    >>> re.findall(email,'qwe@qq.com')
    ['.com']

3.文件的读写
    文件读写的3中模式
    1、w 写模式，它是不能读的，如果用w模式打开一个已经存在的文件，会清空以前的文件内容，重新写
       w+ 是读写内容，只要沾上w，肯定会清空原来的文件
    2、r 读模式，只能读，不能写，而且文件必须存在
       r+ 是读写模式，只要沾上r，文件必须存在
    3、a 追加模式，也能写,在文件的末尾添加内容
    4、rb+、wb+、ab+,这种是二进制模式打开或者读取，一些音乐文件
test1.txt
1 如果无情的风摘走了那片树叶
2 如同摘走了我的心
3 在每一个想你的夜晚
4 请允许我将你抱紧
5 我不像一只大雁可以秋去春来
6 衔回丢失的缘分
7 所以从来不敢回忆离别
8 越是清晰 越是伤心
9 你说所有的城市没有不同
10 我宁愿相信你心中有片草原
    1、循环读取文件中的每一行内容：
    demo1.py1
file = open('test1.txt','r+')# 打开test1.txt 文件
for line in file: # 遍历file文件
     print('line里面存放的是：',line) # 循环打印文件中每一行内容
     print(type(line)) # <class 'str'> 类型是字符串
file.close()# 关闭文件
    2.用with的方式打开文件，不用担心使用完文件后忘记关闭，它会自动将文件关闭
with open('test1.txt','r+') as file:
     for line in file:
         print('line里面存放的是：',line) # 循环打印文件中每一行内容
         print(type(line)) # <class 'str'> 类型是字符串
    3、向文件中写入内容
with open('users','a+') as fw: # 打开文件
     fw.write('写入文件内容')
    4、用函数的方式读取文件
def read_file(filename):
     '''
     用来读取文件内容
     :param filename: 文件名
     '''
     with open(filename,'a+') as fr:
         fr.seek(0) # 移动文件指针
         content = fr.read() # content 类型是字符串
         print('content:',content)
 read_file('users') # 调用函数
    5、用函数的方式写文件
def write_file(filename,content):
     '''
     用来读取文件内容的
     :param filename: 文件名
     '''
     with open(filename,'a+') as fw:
         fw.seek(0) # 移动文件指针
         fw.truncate() # 清空文件内容
         fw.write(str(content))
 write_file('a','hello world') # 调用函数

